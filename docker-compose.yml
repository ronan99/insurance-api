version: "3.4"
networks:
  insuranceapi:

services:
  mysql:
    image: mysql:8.0
    restart: always
    container_name: databases
    environment:
      MYSQL_USER: "rlino"
      MYSQL_PASSWORD: "password"
      MYSQL_ROOT_PASSWORD: "password"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      retries: 10

    ports:
      - "3306:3306"
    expose:
      - "3306"
    volumes:
      - /home/tmp/mysql/insurance:/var/lib/mysql
      - ./init:/docker-entrypoint-initdb.d/:ro
    networks:
      - insuranceapi
    deploy:
      resources:
        limits:
          cpus: "0.6"
          memory: "1200MB"

  identity_api:
    build: ./identity-api
    container_name: identity-api
    restart: always
    volumes:
      - ./identity-api:/usr/src/identity-api
      - /usr/src/identity-api/node_modules
    ports:
      - 3030:3030
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - insuranceapi
    deploy:
      resources:
        limits:
          cpus: "0.4"
          memory: "900MB"

  app:
    image: nginx:stable-alpine
    container_name: nginx_proxy
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - pricing_api01
      - pricing_api02
    ports:
      - 3000:3000
    networks:
      - insuranceapi
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "100MB"

  pricing_api01: &api
    build: ./pricing-api
    container_name: pricing-api01
    restart: always
    volumes:
      - ./pricing-api:/usr/src/pricing-api
      - /usr/src/pricing-api/node_modules
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - insuranceapi
    environment:
      APPLY_SEED: true
    deploy:
      resources:
        limits:
          cpus: "0.4"
          memory: "800MB"

  pricing_api02:
    <<: *api
    container_name: pricing-api02
    networks:
      - insuranceapi
    environment:
      APPLY_SEED: false
    depends_on:
      mysql:
        condition: service_healthy
